package main

import "fmt"

// Дана последовательность температурных колебаний: -25.4, -27.0, 13.0, 19.0, 15.5, 24.5, -21.0, 32.5.
// Объединить данные значения в группы с шагом в 10 градусов.
// Последовательность в подмножноствах не важна.

// Пример: { -25.4 , -27.0 , -21.0 } { 13.0 , 19.0 , 15.5 } { 24.5 } { 32.5 }

// Функция объединения последовательности темп. колбеаний в группы с шагом 10
func groupTemps(ts []float32) map[int][]float32 {
	// группы колебаний
	m := make(map[int][]float32)

	// Для каждого колебания
	for _, t := range ts {
		// Вычисляем группу 
		key := int(t / 10) * 10

		// Если такой группы еще нет, то создаем
		if _, ok := m[key]; !ok {
			m[key] = make([]float32, 0)
		}

		// Добавляем значение в группу
		m[key] = append(m[key], t)
	}

	return m
}

func main() {
	temps := []float32{-25.4, -27.0, 13.0, 19.0, 15.5, 24.5, -21.0, 32.5}
	groups := groupTemps(temps)

	for k, v := range groups {
		fmt.Printf("Group %d: %v\n", k, v)
	}
}
